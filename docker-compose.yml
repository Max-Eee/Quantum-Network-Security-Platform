version: '3.8'

services:
  quantum-platform:
    build: .
    container_name: quantum-network-platform
    ports:
      - "8080:8080"  # API server
      - "3000:3000"  # Dashboard
    environment:
      - QUANTUM_LOGGING_LEVEL=INFO
      - QUANTUM_API_HOST=0.0.0.0
      - QUANTUM_DASHBOARD_HOST=0.0.0.0
      - QUANTUM_PERFORMANCE_MONITORING_ENABLED=true
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config/user:/app/config/user
      - ./exports:/app/exports
    restart: unless-stopped
    networks:
      - quantum-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: quantum-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - quantum-network
    command: redis-server --appendonly yes

  prometheus:
    image: prom/prometheus:latest
    container_name: quantum-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - quantum-network

  grafana:
    image: grafana/grafana:latest
    container_name: quantum-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=quantum123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - quantum-network
    depends_on:
      - prometheus

networks:
  quantum-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
